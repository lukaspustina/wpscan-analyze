language: rust
env:
  global:
  - CRATE_NAME=wpscan-analyze
    #  - RUSTFLAGS="-C link-dead-code"
  - secure: "Jp/GWDxiQMadOB5/QK3mUYnA4lZQEw50Xuy4qHw8jZ4Ft9gbKGvgXBVpY0cg368Z3OnguiytebSZsC/Q722lQ6ZCefuC24d/BSrddsKyy3eakVZtcGLpKn5WZs/yNNJEivSe2QYpB0p7VDw0EyF0oTSAgs5uDbe2/rp4YyUgxt5nn1vcOrG0BodgxskIdaWsBg4QZKumnNhkwKg0F+5547yd9FdQfuABbu6mCflcCdfwbJkFobYou2ThHHz4g8BykGQQLOVTV0FihPlUGaszENeLuKt+fEHPuA7bxnMOm3Op/0HQpCGOvm2XPgsm8iYzoRoqgG3f9M8ODamIwQzWuQ3msS+bKu/9ayrblECb/9nM+RyKPERFROo/PqqgoPfIB2q5i2ckIzJNBSLm3CZMeLPmsh9AyKHWLmHmrC9HZXk3neS2ahjQHNJ1DOIGa0upGWEX63TedFh+CSkPzb2TQ+MQTlHztSsBeuA1tdUHGnTIUYHqB5bN3Uzeg/YQr0mrc2oTMUy05OKkpjia3bVJn0AaWQ8V+ONWYCZJXfedU3OktUVdeaHHeQZAwDz578ulkdTmXeimPY7a+Q5oYV9apHQB7V3Yyo9JKhdq+mwqVqlk1Fnni0sLgv0tyUBv39sNOdmnJPp/R5aBUDroZnD1R0LVVm1tpt2//ZZHpkITEgs="
matrix:
  fast_finish: true
  include:
  - env: TARGET=x86_64-unknown-linux-gnu DEPLOY_CRATES_IO=1 DEPLOY_DEB=1 DEPLOY_GITHUB=1 DEPLOY_ARCH=amd64
    rust: 1.34.0
  - env: TARGET=x86_64-apple-darwin DEPLOY_GITHUB=1
    rust: 1.34.0
    os: osx
  - env: TARGET=x86_64-unknown-linux-gnu CODECOV=1 RUSTFLAGS="-C link-dead-code"
    rust: stable
  - env: TARGET=x86_64-apple-darwin
    rust: stable
    os: osx
  - env: TARGET=x86_64-unknown-linux-gnu
    rust: beta
  - env: TARGET=x86_64-apple-darwin
    rust: beta
    os: osx
  - env: TARGET=x86_64-unknown-linux-gnu
    rust: nightly
  - env: TARGET=x86_64-apple-darwin
    rust: nightly
    os: osx
  allow_failures:
  - rust: beta
  - rust: nightly
sudo: required
addons:
  apt:
    packages:
    - libcurl4-openssl-dev
    - libelf-dev
    - libdw-dev
    - cmake
    - gcc
    - binutils-dev
    - libiberty-dev
after_success: |
  if [[ "$TRAVIS_OS_NAME" == "linux" && "$CODECOV" ]]; then
    echo "Running code coverage" &&
    wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
    tar xzf master.tar.gz &&
    cd kcov-master &&
    mkdir build &&
    cd build &&
    cmake .. &&
    make &&
    make install DESTDIR=../../kcov-build &&
    cd ../.. &&
    rm -rf kcov-master &&
    for file in target/debug/wpscan_analyze-*[^\.d] target/debug/it_*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
    bash <(curl -s https://codecov.io/bash) &&
    echo "Uploaded code coverage."
  fi
  if [[ "$TRAVIS_TAG" && ( "$DEPLOY_DEB" || "DEPLOY_GITHUB" ) ]]; then
    echo "Running release build" &&
    cargo build --release &&
    cp "target/release/$CRATE_NAME" "target/release/$CRATE_NAME-$TRAVIS_TAG-$TARGET" &&
    gzip "target/release/$CRATE_NAME-$TRAVIS_TAG-$TARGET" &&
    ls -l target/release/ &&
    echo "Built Release Binary."
  fi
  if [[ "$DEPLOY_DEB" && "$DEPLOY_ARCH" && "$TRAVIS_TAG" ]]; then
    echo "Running deb packaging" &&
    cd distribution/deb/ &&
    SRC_DIR=../../ BIN_DIR=../../target/release ARCH=$DEPLOY_ARCH VERSION=$TRAVIS_TAG TAG=$TRAVIS_TAG DIST=trusty make package &&
    cd ../.. &&
    echo "Built Debian Package."
  fi
before_deploy: |
  echo "Running before each single deployment..."
  echo "Run before each single deployment."
deploy:
  - provider: packagecloud
    username: lukaspustina
    token:
      secure: "pXQgGLyNmYeMlAwXbIdpR4yXJeil/ey+bsjBdIeb0qatTC8hhWngU89vqXfkOhoYLRiPrbLu0mpavT9qW/BPpWUN8DUN18ugZKq/qJWpysBl18mRI9rUhBTQ+Cyb7JdRfkef4RlLORJJOfsRzTO4E4I7VLB8qE3kedk+GRVjKBH30N+fFDsRQEannjTg5YKmJA8X2TZDuei8XYUjgjrVxiXjiuXTVorgEiUPed35JKKAcaUtTUC07b2uRSjvgIlmMo+yb0/UrL0wHNYZBCxJuTEOtd5wrDYm7nxOzlFmcOfyhO/klgFSS/jdMx7e3reHBcld6x8ftAb3mO6tsRMgWlovtUoWvANF5sIDlvLkXuGFwxD+cWjqasAP3H0I4/SKdiiA2ErJlFH8kVmYrXf4kkugtfdZW5z8Qjj6uFEpi/rPUMG1nU48joU2jvTyMLxlujbggGt/aio3EqU6dC6HKEw8nhBZptD5k2w6XbRnS7xRiN++MFlysz7hcBzk+KdTLqgSFjCppgsEln3D3W8RfYpm+I0D9XaUd9LcqEhZ0eohaUKGaXO0ZGMEpS6fmOKdtyqKe9n/EEFEn+m9di02rMrJZ67kLBCWTq4LFKSdKxqezFLCv4d1ncNY21axW89b+QX63i7QbLXm4Zn7UcAUliOvj6HWftLNmuVAiYMqn88="
    repository: opensource
    dist: ubuntu/trusty
    package_glob: "distribution/deb/**/*.deb"
    skip_cleanup: true
    on:
      tags: true
      condition:
      - "$DEPLOY_DEB"
      - "$TRAVIS_TAG"
  - provider: packagecloud
    username: centerdevice
    token:
      secure: "u8fVucKDpuvwTYWPfL+3K/IhhtrLiL1AZeJLqrd1VpfPU3rmncuD5O0Xz2kmDX+GleCqLS3Lx9YiZLRGVzpnA8fWFVNRpn3V+ATX9AaePOXAsKR97VR46YcaeooOgF2PGoqBIWZx3s4l6oU2+MDtcDX1RO/neB1milSCaMynKslozo+lWj265SAICFz7nMfoKOclDQioTmfIOVDcACZexnKhipErc8nVQD6u+MoyhM95aNunwZLOvtzAByewHQBKpIYWYInbGDg/Wg0K+tzE2JObjNX+274kcLqjtlQvtZ3q0QBjeaTBUqy+HAHfQMUA8Os22xumJ3jD/AZG30srSDk3Xx/AibDQfWa7Cf8vOx5a2MfzZihvnwWLNqBqM9F+DY8P4rhnhbr7m5ez4DyXQ2NWHIdgVKybFqNcABtTDFyGTVH83nDtHov3V/gKCAvqWuRXjJcAZcivQ2OmytjpTwQsIrTM5FAy3yZaGj0f2aVr+OpQu2Qd8XqPPyFjBGF9abusWq8QFA6upilgREjn/Smq4OAbuddjoakTi5AW+PYPtHl8KSZL041aLv3umcy60utBIaQ19LeawNBwhJJ+fc5ivj12hcyLCT4em+Naz8DmCjHseWWRQt9jL/gu226pNbBIdNUFYne6ApynhOAQedIWXXZZcPB83rKL1AdaFgo="
    repository: infrastructure
    dist: ubuntu/trusty
    package_glob: "distribution/deb/**/*.deb"
    skip_cleanup: true
    on:
      tags: true
      condition:
      - "$DEPLOY_DEB"
      - "$TRAVIS_TAG"
  - provider: releases
    api_key:
      secure: "Vqoc9Bz2sxhcg/abbM5/bqwZ3TkrfCg1lU5uQnMRL2OVBAMK6/DktaPU1kDcLT1QDuuB7hadmXXSfjr2KlqpHUQaAIBsQm08kcB+iZ7sHlHuUcb3jGPQ9XGfKjlkimjeSdM8TsKind8j4hBDkRCvcIYHB0cpkq9ubuGFA+hNK4Yom8KDCdO0jDxHfq+sKKSSYozmq5vTU4RPbRAw+/5o8EgSa0/zTyMnljSdamwT04DGezRuzwb+Xu0+W2Rwu4BA6tGD7m3AhaN/E5FFUUx4uObvou8Z2JtkEta6xv7zLW3eJk8D0l6THkbmAShRoUAm7IvklpX8r+K0fVVnYPK0P4Cc4/0sNI5hx2sQLY03AWeDGpuvLXtdfGLHujTFa2d+WsAf0Y7QWzwGOnqOE50KF0rozAmRt8yknpA9vWtRIvT3Ur17zoCnjMoGyitYtkfIEmRhmX3ugj2QXw4smk2rhImiokoIpPaSMCrqLqAbuZgBV9ZwxV9+VAPm3x7TjV8Mw7taw/Jkx2JXmrxJYOd+w3BlDnz8FnpbUsKy9Qh2R6EUbWRAEX0/ZGH5YI7UM35PnIb3cWRhc7pxwZss0EWK3l/vuz2H7kmkk/tDndL6mYYaRD5Y50Chu/lbdQJ1P8is3evZVC64rdd+MtQFwGhVtEHc8O8wGfLGVur9mSP6GUQ="
    file_glob: true
    file: "target/release/$CRATE_NAME-$TRAVIS_TAG-$TARGET.gz"
    skip_cleanup: true
    on:
      tags: true
      condition:
      - "$DEPLOY_GITHUB"
      - "$TRAVIS_TAG"
after_deploy: |
  if [[ "$DEPLOY_CRATES_IO" ]]; then
    cd /home/travis/build/lukaspustina/$CRATE_NAME
    cargo publish --token ${CRATES_IO_TOKEN} --allow-dirty
  fi

